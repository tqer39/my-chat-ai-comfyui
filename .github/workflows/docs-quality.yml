name: Documentation Quality

on:
  push:
    branches: [ main ]
    paths:
      - '**.md'
      - 'docs/**'
      - '.markdownlint.json'
      - 'cspell.json'
  pull_request:
    branches: [ main ]
    paths:
      - '**.md'
      - 'docs/**'
      - '.markdownlint.json'
      - 'cspell.json'

jobs:
  markdown-lint:
    runs-on: ubuntu-latest
    name: Markdown Linting
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install markdownlint-cli2
        run: npm install -g markdownlint-cli2

      - name: Run markdownlint
        run: markdownlint-cli2 --config .markdownlint.json --fix "**/*.md"

  spell-check:
    runs-on: ubuntu-latest
    name: Spell Check
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install cspell
        run: npm install -g cspell

      - name: Run spell check
        run: cspell --config cspell.json "**/*.md" "**/*.py" "**/*.js" "**/*.ts" "**/*.json" "**/*.yaml" "**/*.yml"

  documentation-structure:
    runs-on: ubuntu-latest
    name: Documentation Structure Check
    steps:
      - uses: actions/checkout@v4

      - name: Check Japanese documentation exists
        run: |
          echo "Checking for Japanese documentation files..."

          # Check that Japanese versions exist for main documentation files
          if [ ! -f "docs/HOWTO.ja.md" ]; then
            echo "Error: docs/HOWTO.ja.md is missing"
            exit 1
          fi

          if [ ! -f "docs/API.ja.md" ]; then
            echo "Error: docs/API.ja.md is missing"
            exit 1
          fi

          if [ ! -f "docs/CONTRIBUTING.ja.md" ]; then
            echo "Error: docs/CONTRIBUTING.ja.md is missing"
            exit 1
          fi

          if [ ! -f "docs/README.ja.md" ]; then
            echo "Error: docs/README.ja.md is missing"
            exit 1
          fi

          echo "All required Japanese documentation files are present"

      - name: Check English documentation structure
        run: |
          echo "Checking English documentation structure..."

          # Check that English versions exist in correct locations
          if [ ! -f "README.md" ]; then
            echo "Error: README.md is missing from root"
            exit 1
          fi

          if [ ! -f "docs/HOWTO.md" ]; then
            echo "Error: docs/HOWTO.md is missing"
            exit 1
          fi

          if [ ! -f "docs/API.md" ]; then
            echo "Error: docs/API.md is missing"
            exit 1
          fi

          if [ ! -f "docs/CONTRIBUTING.md" ]; then
            echo "Error: docs/CONTRIBUTING.md is missing"
            exit 1
          fi

          echo "All required English documentation files are present"

  quality-tools-check:
    runs-on: ubuntu-latest
    name: Quality Tools Configuration Check
    steps:
      - uses: actions/checkout@v4

      - name: Check configuration files exist
        run: |
          echo "Checking for required configuration files..."

          if [ ! -f ".editorconfig" ]; then
            echo "Error: .editorconfig is missing"
            exit 1
          fi

          if [ ! -f ".pre-commit-config.yaml" ]; then
            echo "Error: .pre-commit-config.yaml is missing"
            exit 1
          fi

          if [ ! -f ".markdownlint.json" ]; then
            echo "Error: .markdownlint.json is missing"
            exit 1
          fi

          if [ ! -f "cspell.json" ]; then
            echo "Error: cspell.json is missing"
            exit 1
          fi

          echo "All required configuration files are present"

      - name: Validate configuration files
        run: |
          echo "Validating configuration files..."

          # Validate JSON files
          python -m json.tool .markdownlint.json > /dev/null
          echo ".markdownlint.json is valid JSON"

          python -m json.tool cspell.json > /dev/null
          echo "cspell.json is valid JSON"

          # Check that pre-commit config includes required hooks
          if ! grep -q "markdownlint-cli2" .pre-commit-config.yaml; then
            echo "Error: markdownlint-cli2 hook not found in .pre-commit-config.yaml"
            exit 1
          fi

          if ! grep -q "cspell" .pre-commit-config.yaml; then
            echo "Error: cspell hook not found in .pre-commit-config.yaml"
            exit 1
          fi

          echo "Configuration files are valid"
